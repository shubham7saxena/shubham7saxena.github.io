<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on Shubham Saxena</title>
    <link>https://shubham7saxena.github.io/tags/database/</link>
    <description>Recent content in Database on Shubham Saxena</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Jan 2019 15:18:34 +0530</lastBuildDate>
    
	<atom:link href="https://shubham7saxena.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to not break your rails migration</title>
      <link>https://shubham7saxena.github.io/posts/rails-migration-in-a-sane-way/</link>
      <pubDate>Sat, 26 Jan 2019 15:18:34 +0530</pubDate>
      
      <guid>https://shubham7saxena.github.io/posts/rails-migration-in-a-sane-way/</guid>
      <description>When I first encountered migrations in rails I was amazed, to say the least. For the better part of last year, I&amp;rsquo;ve been writing Golang and Clojure both of which lack a powerful database client.
The ability to use application code in migrations is a very powerful feature and can be used in a myriad of ways. This feature becomes available because both your models and migrations are managed by ActiveRecord and hence you can easily play around with your models which inherit from ActiveRecord.</description>
    </item>
    
    <item>
      <title>Implementing STI for classes within a module</title>
      <link>https://shubham7saxena.github.io/posts/rails-sti-for-classes-in-a-module/</link>
      <pubDate>Sat, 26 Jan 2019 15:18:34 +0530</pubDate>
      
      <guid>https://shubham7saxena.github.io/posts/rails-sti-for-classes-in-a-module/</guid>
      <description>Single Table Inheritance (STI) as design pattern has been made popular by rails primarily because of the native support and also because it can be very helpful when used judiciously. You can read more about it over here. Now, assuming we have a fair enough idea of what STI is and how to use it, let&amp;rsquo;s try to understand a particular problem and it&amp;rsquo;s solution.
Let me explain the problem through an example.</description>
    </item>
    
  </channel>
</rss>